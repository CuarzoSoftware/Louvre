#ifndef LDATAOFFER_H
#define LDATAOFFER_H

#include <LObject.h>

/**
 * @brief Data offered to a client
 *
 * @note This class is primarily intended for internal use by Louvre and may not be directly useful to you.
 *
 * The LDataOffer class represents the [wl_data_offer](https://wayland.app/protocols/wayland#wl_data_offer) interface of the Wayland protocol.
 * It is used to share the characteristics of an LDataSource (clipboard or drag & drop session) with a target client when one of its surfaces
 * acquire pointer or keyboard focus.\n
 */
class Louvre::LDataOffer : public LObject
{
public:

    /**
     * @brief Usage of a data offer.
     *
     * Indicates the context in which a data offer is used.
     */
    enum Usage : UInt32
    {
        /// @brief Indefinite use.
        /// The data offering has not yet been assigned an use.
        Undefined = 0,

        /// @brief Used by the clipboard.
        Selection = 1,

        /// @brief Used in a drag & drop session.
        DND = 2
    };

    /// @cond OMIT
    LDataOffer(const LDataOffer&) = delete;
    LDataOffer& operator= (const LDataOffer&) = delete;
    /// @endcond

    /**
     * @brief Usage of a data offer.
     *
     * Indicates the context in which the data offer is used.\n
     * It can be used by the clipboard, in drag & drop sessions or have an indefinite use.
     */
    Usage usedFor() const;

    /**
     * @brief Wayland resource of the data offer.
     *
     * Returns the resource generated by the [wl_data_offer](https://wayland.app/protocols/wayland#wl_data_offer) interface of the Wayland protocol.
     */
    Protocols::Wayland::RDataOffer *dataOfferResource() const;

    LPRIVATE_IMP_UNIQUE(LDataOffer)

    /// @cond OMIT
    friend class Protocols::Wayland::RDataOffer;
    LDataOffer(Protocols::Wayland::RDataOffer *dataOfferResource);
    ~LDataOffer();
    /// @endcond
};

#endif // LDATAOFFER_H
