<?xml version="1.0" encoding="UTF-8"?>
<protocol name="background_blur">
  <copyright>
    Copyright Â© 2025 Cuarzo Software

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice (including the next
    paragraph) shall be included in all copies or substantial portions of the
    Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
  </copyright>

  <interface name="background_blur_manager" version="2">
    <description summary="background blur manager">
      This interface allows a compositor to announce support for blurring the backgrounds of surfaces.
      
      Starting from version 2, clients are permitted to define the blurred region using SVG paths.
    </description>

    <enum name="error">
      <entry name="already_constructed" value="0" summary="the surface already has an associated background blur"/>
    </enum>

    <request name="destroy" type="destructor">
      <description summary="destroy the background blur manager object">
        Destroy the background blur manager. This doesn't destroy objects created with the manager.
      </description>
    </request>

    <request name="get_background_blur">
      <description summary="create a new background blur object">
        Creates a new background blur object for a given surface.

        The surface must not already have an associated background blur, otherwise the already_constructed error is emitted.

        Immediately after the object is created, the compositor will send a state event, a style event, and finally a configure event.

        Surfaces must acknowledge the configure event and may then define the blur region or path before the next commit.

        The client may ignore all configure events except for the last one.

        A client can send multiple ack_configure requests before committing, but only the last request sent prior to the commit indicates which configure event the client is responding to.
      </description>
            
      <arg name="id" type="new_id" interface="background_blur"/>
      <arg name="surface" type="object" interface="wl_surface"/>
    </request>
  </interface>

  <interface name="background_blur" version="2">
    <description summary="background blur object">
      Blur effect that is applied to the background of a surface.
    </description>

    <enum name="error">
      <entry name="destroyed_surface" value="0" summary="surface destroyed before object"/>
      <entry name="invalid_serial" value="1" summary="invalid ack serial"/>
      <entry name="invalid_path" value="2" since="2" summary="invalid svg path"/>
    </enum>
    
    <enum name="state">
      <entry name="disabled" value="0" summary="the blur effect is disabled"/>
      <entry name="enabled" value="1" summary="the blur effect is enabled"/>
    </enum>
    
    <enum name="style">
      <entry name="dark" value="0" summary="the blur effect has a dark tone"/>
      <entry name="light" value="1" summary="the blur effect has a light tone"/>
    </enum>

    <request name="destroy" type="destructor">
      <description summary="destroy the vector path object">
        Switch back to a mode without background blur at the next commit.
      </description>
    </request>
    
    <request name="set_region">
      <description summary="set the blurred region">
        Sets the blurred region.

        This is a double-buffered operation, refer to wl_surface.commit. 
        The region is defined in local surface coordinates and may not extend beyond the surface bounds. 
        The compositor may apply additional clipping at its discretion. 
        The client should avoid both rendering opaque content within the blurred region and marking the blurred region as opaque.

        Setting the pending blur region has copy semantics, allowing the wl_region object to be destroyed immediately. 
        Setting a null region disables the blur effect.

        For the compositor to display the blur effect, it must be configured as enabled, and the client must commit a non-null region or path.
        
        The initial value is null.
      </description>
      <arg name="blur_region" type="object" allow-null="true" interface="wl_region"/>
    </request>
    
    <request name="ack_configure">
      <description summary="ack a pending configuration">
        Acknowledging a serial that has not been sent, or one that has already been acknowledged, triggers the invalid_serial error.
      </description>
      
      <arg name="serial" type="uint" summary="serial of the configure event"/>
    </request>
    
    <event name="state">
      <description summary="Indicates whether the blur effect is enabled">
        Specifies whether the blur effect is being applied by the compositor.
        If the effect is disabled, the surface should no longer make the blurred region transparent.
        
        The change must be followed by a configure event to take effect.  
        
        The initial state is disabled.
      </description>
      <arg name="state" type="uint" enum="state" summary="The state of the blur effect."/>
    </event>
    
    <event name="style">
      <description summary="Indicates the color tone of the blur effect.">
        The style specifies the color tone of the blur effect. Clients can adapt their content accordingly,  
        for example, displaying white text if the tone is dark or black text if the tone is light. 
        
        The change must be followed by a configure event to take effect.
        
        The initial value is light.
      </description>
      <arg name="style" type="uint" enum="style" summary="The color tone of the blur effect."/>
    </event>
    
    <event name="configure">
      <description summary="notifies a blur effect change">
	      The configure event marks the end of a configure sequence.

	      If the client receives multiple configure events before it can respond
	      to one, it is free to discard all but the last event it received.
      </description>
      <arg name="serial" type="uint" summary="serial of the configure event"/>
    </event>
    
    <request name="set_path" since="2">
      <description summary="set the blurred path">
        Sets the blurred region using an SVG path.

        The string of commands must describe a valid SVG path, as specified here:

        https://svgwg.org/specs/paths/

        This operation has identical semantics to set_region. 
        The SVG path coordinates must be defined in local surface coordinates. 
        Using either set_path or set_region invalidates the other.
        
        Setting a non null invalid path triggers the invalid_path error.
      </description>
      <arg name="commands" type="string" allow-null="true" summary="the SVG path commands"/>
    </request>
    
  </interface>
</protocol>
