<?xml version="1.0" encoding="UTF-8"?>
<protocol name="background_blur">
  <copyright>
    Copyright Â© 2025 Cuarzo Software

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice (including the next
    paragraph) shall be included in all copies or substantial portions of the
    Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
  </copyright>

  <interface name="background_blur_manager" version="3">
    <description summary="background blur manager">
      This interface allows a compositor to announce support for blurring the 
      backgrounds of surfaces.
    </description>

    <enum name="error">
      <entry name="already_constructed" value="0" 
        summary="the surface already has an associated background blur object"/>
    </enum>

    <request name="destroy" type="destructor">
      <description summary="destroy the background blur manager object">
        Destroy the background blur manager. This doesn't destroy objects 
        created with the manager.
      </description>
    </request>

    <request name="get_background_blur">
      <description summary="create a new background blur object">
        Creates a new background blur object for a given surface.

        The surface must not already have an associated background blur, otherwise 
        the already_constructed error is emitted.

        Immediately after the object is created, the compositor will send a state 
        event, a style event, and finally a configure event.

        Surfaces must acknowledge the configure event and may then define the blur 
        region, round rect or SVG path before the next commit.

        The client may ignore all configure events except for the last one.

        A client can send multiple ack_configure requests before committing, but only 
        the last request sent prior to the commit indicates which configure event the 
        client is responding to.
      </description>
            
      <arg name="id" type="new_id" interface="background_blur"/>
      <arg name="surface" type="object" interface="wl_surface"/>
    </request>
  </interface>

  <interface name="background_blur" version="3">
    <description summary="background blur object">
      Blur effect that is applied to the background of a surface.

      Starting from version 2, clients are permitted to define the blur area
      using a round rect.

      Starting from version 3, clients are permitted to define the blur area
      using an svg_path object.

      Using either set_region, set_round_rect or set_path replaces the last specified blur area.

      The blur area is always defined in local surface coordinates and must not extend beyond the 
      surface bounds otherwise the out_of_bounds error is emitted. 
    
      The client should avoid both rendering completly opaque content within the blur area while enabled.

      The initial blur area is an empty region (no blur).
    </description>

    <enum name="error">
      <entry name="destroyed_surface" 
        value="0" summary="surface destroyed before object"/>
      <entry name="invalid_serial" 
        value="1" summary="invalid ack serial"/>
      <entry name="out_of_bounds" 
        value="2" summary="the region, round rect or path extends beyond the surface bounds"/>
      <entry name="invalid_round_rect" 
        value="3" since="2" summary="invalid round rect"/>
      <entry name="invalid_path" 
        value="4" since="3" summary="invalid svg path"/>
    </enum>
    
    <enum name="state">
      <entry name="disabled" value="0" 
        summary="the blur effect is not displayed by the compositor"/>
      <entry name="enabled" value="1" 
        summary="the blur effect is displayed by the compositor"/>
    </enum>
    
    <enum name="style">
      <entry name="dark" value="0" summary="the blur effect has a dark tone"/>
      <entry name="light" value="1" summary="the blur effect has a light tone"/>
    </enum>

    <request name="destroy" type="destructor">
      <description summary="destroy the vector path object">
        Switch back to a mode without background blur at the next commit.

        Must be destroyed before the surface otherwise the destroyed_surface
        error is triggered.
      </description>
    </request>
    
    <request name="set_region">
      <description summary="set the blurred region">

        This is a double-buffered operation, refer to wl_surface.commit. 

        Setting the pending blur region has copy semantics, allowing the 
        wl_region object to be destroyed immediately. 

        Setting a null region means that the blur area automatically adapts 
        to the entire surface dimensions.

        In order to display the blur effect, the compositor must send an 
        enabled state event, a configure event, and the client must ACK and 
        commit a null or valid non-empty region, round rect or SVG path.

        The same applies afterwards, the compositor should keep the effect 
        state and style until the client acknowledges and commits a new
        configuration.
        
        The initial blur area is an empty region (no blur).
      </description>
      <arg name="blur_region" type="object" allow-null="true" 
        interface="wl_region"/>
    </request>
    
    <request name="ack_configure">
      <description summary="ack a pending configuration">
        Acknowledging a serial that has not been sent, or one that has already 
        been acknowledged, triggers the invalid_serial error.
      </description>
      
      <arg name="serial" type="uint" summary="serial of the configure event"/>
    </request>
    
    <event name="state">
      <description summary="set the blur effect state">
        Specifies whether the blur effect is being applied by the compositor.

        If the effect is disabled, the surface no longer needs to make the 
        blur area transparent.
        
        Must be followed by a configure event in order to take effect.
        
        The initial state is disabled.
      </description>
      <arg name="state" type="uint" enum="state" summary="The state of the blur effect."/>
    </event>
    
    <event name="style">
      <description summary="set the color tone of the blur effect.">
        The style specifies the color tone of the blur effect so that clients can 
        adapt their content accordingly, for example, displaying white text if the 
        tone is dark or black text if the tone is light. 
        
        The change must be followed by a configure event to take effect.
        
        The initial value is light.
      </description>
      <arg name="style" type="uint" enum="style" summary="The color tone of the blur effect."/>
    </event>
    
    <event name="configure">
      <description summary="notifies a blur effect change">
	      The configure event marks the end of a configure sequence.

	      If the client receives multiple configure events before it can respond
	      to one, it is free to discard all but the last event it received.
      </description>
      <arg name="serial" type="uint" summary="serial of the configure event"/>
    </event>

    <request name="set_round_rect" since="2">
      <description summary="set the blur area using a round rect">        
        Setting a negative width, height, or radius, or if the sum of radii for an 
        edge exceeds the dimensions for that axis, triggers the invalid_round_rect 
        error.
      </description>
      <arg name="x" type="int"/>
      <arg name="y" type="int"/>
      <arg name="width" type="int"/>
      <arg name="height" type="int"/>
      <arg name="radTL" type="int"/>
      <arg name="radTR" type="int"/>
      <arg name="radBR" type="int"/>
      <arg name="radBL" type="int"/>
    </request>
    
    <request name="set_path" since="3">
      <description summary="set the blur area using an svg_path object">

        Setting the pending blur path has copy semantics, allowing the 
        svg_path object to be destroyed immediately. 
        
        Setting an unconstructed or invalid path triggers the invalid_path error.
      </description>
      <arg name="path" type="object" interface="svg_path" summary="the SVG path commands"/>
    </request>
    
  </interface>
</protocol>
